State 0:
start' -> . start [ # ]
-- On VAR shift to state 1
-- On TRUE shift to state 25
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FALSE shift to state 26
-- On start shift to state 27
-- On exprC shift to state 9
-- On exprB shift to state 28
-- On expr shift to state 46
-- On deb shift to state 47
-- On assignable shift to state 49
-- On affect shift to state 52

State 1:
assignable -> VAR . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
expr -> VAR . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
exprC -> VAR . OPEN expr CLOSE [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
-- On OPEN shift to state 2
-- On TIMES reduce production assignable -> VAR 
-- On TIMES reduce production expr -> VAR 
-- On PLUS reduce production assignable -> VAR 
-- On PLUS reduce production expr -> VAR 
-- On OR reduce production assignable -> VAR 
-- On OR reduce production expr -> VAR 
-- On NEQ reduce production assignable -> VAR 
-- On NEQ reduce production expr -> VAR 
-- On MINUS reduce production assignable -> VAR 
-- On MINUS reduce production expr -> VAR 
-- On LT reduce production assignable -> VAR 
-- On LT reduce production expr -> VAR 
-- On LEQ reduce production assignable -> VAR 
-- On LEQ reduce production expr -> VAR 
-- On GT reduce production assignable -> VAR 
-- On GT reduce production expr -> VAR 
-- On GEQ reduce production assignable -> VAR 
-- On GEQ reduce production expr -> VAR 
-- On EQ reduce production assignable -> VAR 
-- On EQ reduce production expr -> VAR 
-- On EOF reduce production assignable -> VAR 
-- On EOF reduce production expr -> VAR 
-- On DIVIDE reduce production assignable -> VAR 
-- On DIVIDE reduce production expr -> VAR 
-- On CLOSEP reduce production assignable -> VAR 
-- On CLOSEP reduce production expr -> VAR 
-- On CLOSE reduce production assignable -> VAR 
-- On CLOSE reduce production expr -> VAR 
-- On ASSIGN reduce production assignable -> VAR 
-- On AND reduce production assignable -> VAR 
-- On AND reduce production expr -> VAR 
** Conflict on TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND

State 2:
exprC -> VAR OPEN . expr CLOSE [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 23
-- On assignable shift to state 11

State 3:
expr -> STRING . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> STRING 
-- On PLUS reduce production expr -> STRING 
-- On OR reduce production expr -> STRING 
-- On NEQ reduce production expr -> STRING 
-- On MINUS reduce production expr -> STRING 
-- On LT reduce production expr -> STRING 
-- On LEQ reduce production expr -> STRING 
-- On GT reduce production expr -> STRING 
-- On GEQ reduce production expr -> STRING 
-- On EQ reduce production expr -> STRING 
-- On EOF reduce production expr -> STRING 
-- On DIVIDE reduce production expr -> STRING 
-- On CLOSEP reduce production expr -> STRING 
-- On CLOSE reduce production expr -> STRING 
-- On AND reduce production expr -> STRING 

State 4:
expr -> OPENP . expr CLOSEP [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 13
-- On assignable shift to state 11

State 5:
expr -> NOT . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 12
-- On assignable shift to state 11

State 6:
expr -> MINUS . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 10
-- On assignable shift to state 11

State 7:
expr -> INT . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> INT 
-- On PLUS reduce production expr -> INT 
-- On OR reduce production expr -> INT 
-- On NEQ reduce production expr -> INT 
-- On MINUS reduce production expr -> INT 
-- On LT reduce production expr -> INT 
-- On LEQ reduce production expr -> INT 
-- On GT reduce production expr -> INT 
-- On GEQ reduce production expr -> INT 
-- On EQ reduce production expr -> INT 
-- On EOF reduce production expr -> INT 
-- On DIVIDE reduce production expr -> INT 
-- On CLOSEP reduce production expr -> INT 
-- On CLOSE reduce production expr -> INT 
-- On AND reduce production expr -> INT 

State 8:
expr -> FLOAT . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> FLOAT 
-- On PLUS reduce production expr -> FLOAT 
-- On OR reduce production expr -> FLOAT 
-- On NEQ reduce production expr -> FLOAT 
-- On MINUS reduce production expr -> FLOAT 
-- On LT reduce production expr -> FLOAT 
-- On LEQ reduce production expr -> FLOAT 
-- On GT reduce production expr -> FLOAT 
-- On GEQ reduce production expr -> FLOAT 
-- On EQ reduce production expr -> FLOAT 
-- On EOF reduce production expr -> FLOAT 
-- On DIVIDE reduce production expr -> FLOAT 
-- On CLOSEP reduce production expr -> FLOAT 
-- On CLOSE reduce production expr -> FLOAT 
-- On AND reduce production expr -> FLOAT 

State 9:
assignable -> exprC . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
-- On TIMES reduce production assignable -> exprC 
-- On PLUS reduce production assignable -> exprC 
-- On OR reduce production assignable -> exprC 
-- On NEQ reduce production assignable -> exprC 
-- On MINUS reduce production assignable -> exprC 
-- On LT reduce production assignable -> exprC 
-- On LEQ reduce production assignable -> exprC 
-- On GT reduce production assignable -> exprC 
-- On GEQ reduce production assignable -> exprC 
-- On EQ reduce production assignable -> exprC 
-- On EOF reduce production assignable -> exprC 
-- On DIVIDE reduce production assignable -> exprC 
-- On CLOSEP reduce production assignable -> exprC 
-- On CLOSE reduce production assignable -> exprC 
-- On ASSIGN reduce production assignable -> exprC 
-- On AND reduce production assignable -> exprC 

State 10:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> MINUS expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LEQ reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GEQ reduce production expr -> MINUS expr 
-- On EQ reduce production expr -> MINUS expr 
-- On EOF reduce production expr -> MINUS expr 
-- On DIVIDE reduce production expr -> MINUS expr 
-- On CLOSEP reduce production expr -> MINUS expr 
-- On CLOSE reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 

State 11:
expr -> assignable . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> assignable 
-- On PLUS reduce production expr -> assignable 
-- On OR reduce production expr -> assignable 
-- On NEQ reduce production expr -> assignable 
-- On MINUS reduce production expr -> assignable 
-- On LT reduce production expr -> assignable 
-- On LEQ reduce production expr -> assignable 
-- On GT reduce production expr -> assignable 
-- On GEQ reduce production expr -> assignable 
-- On EQ reduce production expr -> assignable 
-- On EOF reduce production expr -> assignable 
-- On DIVIDE reduce production expr -> assignable 
-- On CLOSEP reduce production expr -> assignable 
-- On CLOSE reduce production expr -> assignable 
-- On AND reduce production expr -> assignable 

State 12:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> NOT expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> NOT expr 
-- On PLUS reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On NEQ reduce production expr -> NOT expr 
-- On MINUS reduce production expr -> NOT expr 
-- On LT reduce production expr -> NOT expr 
-- On LEQ reduce production expr -> NOT expr 
-- On GT reduce production expr -> NOT expr 
-- On GEQ reduce production expr -> NOT expr 
-- On EQ reduce production expr -> NOT expr 
-- On EOF reduce production expr -> NOT expr 
-- On DIVIDE reduce production expr -> NOT expr 
-- On CLOSEP reduce production expr -> NOT expr 
-- On CLOSE reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 

State 13:
expr -> expr . PLUS expr [ TIMES PLUS MINUS DIVIDE CLOSEP ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS DIVIDE CLOSEP ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS DIVIDE CLOSEP ]
expr -> expr . DIVIDE expr [ TIMES PLUS MINUS DIVIDE CLOSEP ]
expr -> OPENP expr . CLOSEP [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On CLOSEP shift to state 22

State 14:
expr -> expr TIMES . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 15
-- On assignable shift to state 11

State 15:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr TIMES expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On NEQ reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On LT reduce production expr -> expr TIMES expr 
-- On LEQ reduce production expr -> expr TIMES expr 
-- On GT reduce production expr -> expr TIMES expr 
-- On GEQ reduce production expr -> expr TIMES expr 
-- On EQ reduce production expr -> expr TIMES expr 
-- On EOF reduce production expr -> expr TIMES expr 
-- On DIVIDE reduce production expr -> expr TIMES expr 
-- On CLOSEP reduce production expr -> expr TIMES expr 
-- On CLOSE reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 

State 16:
expr -> expr PLUS . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 17
-- On assignable shift to state 11

State 17:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr PLUS expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES shift to state 14
-- On DIVIDE shift to state 18
-- On PLUS reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LEQ reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GEQ reduce production expr -> expr PLUS expr 
-- On EQ reduce production expr -> expr PLUS expr 
-- On EOF reduce production expr -> expr PLUS expr 
-- On CLOSEP reduce production expr -> expr PLUS expr 
-- On CLOSE reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 

State 18:
expr -> expr DIVIDE . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 19
-- On assignable shift to state 11

State 19:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr DIVIDE expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> expr DIVIDE expr 
-- On PLUS reduce production expr -> expr DIVIDE expr 
-- On OR reduce production expr -> expr DIVIDE expr 
-- On NEQ reduce production expr -> expr DIVIDE expr 
-- On MINUS reduce production expr -> expr DIVIDE expr 
-- On LT reduce production expr -> expr DIVIDE expr 
-- On LEQ reduce production expr -> expr DIVIDE expr 
-- On GT reduce production expr -> expr DIVIDE expr 
-- On GEQ reduce production expr -> expr DIVIDE expr 
-- On EQ reduce production expr -> expr DIVIDE expr 
-- On EOF reduce production expr -> expr DIVIDE expr 
-- On DIVIDE reduce production expr -> expr DIVIDE expr 
-- On CLOSEP reduce production expr -> expr DIVIDE expr 
-- On CLOSE reduce production expr -> expr DIVIDE expr 
-- On AND reduce production expr -> expr DIVIDE expr 

State 20:
expr -> expr MINUS . expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 21
-- On assignable shift to state 11

State 21:
expr -> expr . PLUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr MINUS expr . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES shift to state 14
-- On DIVIDE shift to state 18
-- On PLUS reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LEQ reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GEQ reduce production expr -> expr MINUS expr 
-- On EQ reduce production expr -> expr MINUS expr 
-- On EOF reduce production expr -> expr MINUS expr 
-- On CLOSEP reduce production expr -> expr MINUS expr 
-- On CLOSE reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 

State 22:
expr -> OPENP expr CLOSEP . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE AND ]
-- On TIMES reduce production expr -> OPENP expr CLOSEP 
-- On PLUS reduce production expr -> OPENP expr CLOSEP 
-- On OR reduce production expr -> OPENP expr CLOSEP 
-- On NEQ reduce production expr -> OPENP expr CLOSEP 
-- On MINUS reduce production expr -> OPENP expr CLOSEP 
-- On LT reduce production expr -> OPENP expr CLOSEP 
-- On LEQ reduce production expr -> OPENP expr CLOSEP 
-- On GT reduce production expr -> OPENP expr CLOSEP 
-- On GEQ reduce production expr -> OPENP expr CLOSEP 
-- On EQ reduce production expr -> OPENP expr CLOSEP 
-- On EOF reduce production expr -> OPENP expr CLOSEP 
-- On DIVIDE reduce production expr -> OPENP expr CLOSEP 
-- On CLOSEP reduce production expr -> OPENP expr CLOSEP 
-- On CLOSE reduce production expr -> OPENP expr CLOSEP 
-- On AND reduce production expr -> OPENP expr CLOSEP 

State 23:
expr -> expr . PLUS expr [ TIMES PLUS MINUS DIVIDE CLOSE ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS DIVIDE CLOSE ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS DIVIDE CLOSE ]
expr -> expr . DIVIDE expr [ TIMES PLUS MINUS DIVIDE CLOSE ]
exprC -> VAR OPEN expr . CLOSE [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On CLOSE shift to state 24

State 24:
exprC -> VAR OPEN expr CLOSE . [ TIMES PLUS OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEP CLOSE ASSIGN AND ]
-- On TIMES reduce production exprC -> VAR OPEN expr CLOSE 
-- On PLUS reduce production exprC -> VAR OPEN expr CLOSE 
-- On OR reduce production exprC -> VAR OPEN expr CLOSE 
-- On NEQ reduce production exprC -> VAR OPEN expr CLOSE 
-- On MINUS reduce production exprC -> VAR OPEN expr CLOSE 
-- On LT reduce production exprC -> VAR OPEN expr CLOSE 
-- On LEQ reduce production exprC -> VAR OPEN expr CLOSE 
-- On GT reduce production exprC -> VAR OPEN expr CLOSE 
-- On GEQ reduce production exprC -> VAR OPEN expr CLOSE 
-- On EQ reduce production exprC -> VAR OPEN expr CLOSE 
-- On EOF reduce production exprC -> VAR OPEN expr CLOSE 
-- On DIVIDE reduce production exprC -> VAR OPEN expr CLOSE 
-- On CLOSEP reduce production exprC -> VAR OPEN expr CLOSE 
-- On CLOSE reduce production exprC -> VAR OPEN expr CLOSE 
-- On ASSIGN reduce production exprC -> VAR OPEN expr CLOSE 
-- On AND reduce production exprC -> VAR OPEN expr CLOSE 

State 25:
exprB -> TRUE . [ OR EOF AND ]
-- On OR reduce production exprB -> TRUE 
-- On EOF reduce production exprB -> TRUE 
-- On AND reduce production exprB -> TRUE 

State 26:
exprB -> FALSE . [ OR EOF AND ]
-- On OR reduce production exprB -> FALSE 
-- On EOF reduce production exprB -> FALSE 
-- On AND reduce production exprB -> FALSE 

State 27:
start' -> start . [ # ]
-- On # accept start

State 28:
deb -> exprB . [ EOF ]
exprB -> exprB . AND exprB [ OR EOF AND ]
exprB -> exprB . OR exprB [ OR EOF AND ]
-- On OR shift to state 29
-- On AND shift to state 44
-- On EOF reduce production deb -> exprB 

State 29:
exprB -> exprB OR . exprB [ OR EOF AND ]
-- On VAR shift to state 1
-- On TRUE shift to state 25
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FALSE shift to state 26
-- On exprC shift to state 9
-- On exprB shift to state 30
-- On expr shift to state 31
-- On assignable shift to state 11

State 30:
exprB -> exprB . AND exprB [ OR EOF AND ]
exprB -> exprB . OR exprB [ OR EOF AND ]
exprB -> exprB OR exprB . [ OR EOF AND ]
-- On OR reduce production exprB -> exprB OR exprB 
-- On EOF reduce production exprB -> exprB OR exprB 
-- On AND reduce production exprB -> exprB OR exprB 

State 31:
expr -> expr . PLUS expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ DIVIDE ]
expr -> expr . TIMES expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ DIVIDE ]
expr -> expr . MINUS expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ DIVIDE ]
expr -> expr . DIVIDE expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ DIVIDE ]
exprB -> expr . EQ expr [ OR EOF AND ]
exprB -> expr . NEQ expr [ OR EOF AND ]
exprB -> expr . LT expr [ OR EOF AND ]
exprB -> expr . GT expr [ OR EOF AND ]
exprB -> expr . LEQ expr [ OR EOF AND ]
exprB -> expr . GEQ expr [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On NEQ shift to state 32
-- On MINUS shift to state 20
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DIVIDE shift to state 18

State 32:
exprB -> expr NEQ . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 33
-- On assignable shift to state 11

State 33:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr NEQ expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr NEQ expr 
-- On EOF reduce production exprB -> expr NEQ expr 
-- On AND reduce production exprB -> expr NEQ expr 

State 34:
exprB -> expr LT . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 35
-- On assignable shift to state 11

State 35:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr LT expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr LT expr 
-- On EOF reduce production exprB -> expr LT expr 
-- On AND reduce production exprB -> expr LT expr 

State 36:
exprB -> expr LEQ . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 37
-- On assignable shift to state 11

State 37:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr LEQ expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr LEQ expr 
-- On EOF reduce production exprB -> expr LEQ expr 
-- On AND reduce production exprB -> expr LEQ expr 

State 38:
exprB -> expr GT . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 39
-- On assignable shift to state 11

State 39:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr GT expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr GT expr 
-- On EOF reduce production exprB -> expr GT expr 
-- On AND reduce production exprB -> expr GT expr 

State 40:
exprB -> expr GEQ . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 41
-- On assignable shift to state 11

State 41:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr GEQ expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr GEQ expr 
-- On EOF reduce production exprB -> expr GEQ expr 
-- On AND reduce production exprB -> expr GEQ expr 

State 42:
exprB -> expr EQ . expr [ OR EOF AND ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 43
-- On assignable shift to state 11

State 43:
expr -> expr . PLUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS OR MINUS EOF DIVIDE AND ]
exprB -> expr EQ expr . [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On OR reduce production exprB -> expr EQ expr 
-- On EOF reduce production exprB -> expr EQ expr 
-- On AND reduce production exprB -> expr EQ expr 

State 44:
exprB -> exprB AND . exprB [ OR EOF AND ]
-- On VAR shift to state 1
-- On TRUE shift to state 25
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On FALSE shift to state 26
-- On exprC shift to state 9
-- On exprB shift to state 45
-- On expr shift to state 31
-- On assignable shift to state 11

State 45:
exprB -> exprB . AND exprB [ OR EOF AND ]
exprB -> exprB AND exprB . [ OR EOF AND ]
exprB -> exprB . OR exprB [ OR EOF AND ]
-- On OR reduce production exprB -> exprB AND exprB 
-- On EOF reduce production exprB -> exprB AND exprB 
-- On AND reduce production exprB -> exprB AND exprB 

State 46:
deb -> expr . [ EOF ]
expr -> expr . PLUS expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE ]
expr -> expr . TIMES expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE ]
expr -> expr . MINUS expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE ]
expr -> expr . DIVIDE expr [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE ]
exprB -> expr . EQ expr [ OR EOF AND ]
exprB -> expr . NEQ expr [ OR EOF AND ]
exprB -> expr . LT expr [ OR EOF AND ]
exprB -> expr . GT expr [ OR EOF AND ]
exprB -> expr . LEQ expr [ OR EOF AND ]
exprB -> expr . GEQ expr [ OR EOF AND ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On NEQ shift to state 32
-- On MINUS shift to state 20
-- On LT shift to state 34
-- On LEQ shift to state 36
-- On GT shift to state 38
-- On GEQ shift to state 40
-- On EQ shift to state 42
-- On DIVIDE shift to state 18
-- On EOF reduce production deb -> expr 

State 47:
start -> deb . EOF [ # ]
-- On EOF shift to state 48

State 48:
start -> deb EOF . [ # ]
-- On # reduce production start -> deb EOF 

State 49:
affect -> assignable . ASSIGN expr [ EOF ]
expr -> assignable . [ TIMES PLUS NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE ]
-- On ASSIGN shift to state 50
-- On TIMES reduce production expr -> assignable 
-- On PLUS reduce production expr -> assignable 
-- On NEQ reduce production expr -> assignable 
-- On MINUS reduce production expr -> assignable 
-- On LT reduce production expr -> assignable 
-- On LEQ reduce production expr -> assignable 
-- On GT reduce production expr -> assignable 
-- On GEQ reduce production expr -> assignable 
-- On EQ reduce production expr -> assignable 
-- On EOF reduce production expr -> assignable 
-- On DIVIDE reduce production expr -> assignable 

State 50:
affect -> assignable ASSIGN . expr [ EOF ]
-- On VAR shift to state 1
-- On STRING shift to state 3
-- On OPENP shift to state 4
-- On NOT shift to state 5
-- On MINUS shift to state 6
-- On INT shift to state 7
-- On FLOAT shift to state 8
-- On exprC shift to state 9
-- On expr shift to state 51
-- On assignable shift to state 11

State 51:
affect -> assignable ASSIGN expr . [ EOF ]
expr -> expr . PLUS expr [ TIMES PLUS MINUS EOF DIVIDE ]
expr -> expr . TIMES expr [ TIMES PLUS MINUS EOF DIVIDE ]
expr -> expr . MINUS expr [ TIMES PLUS MINUS EOF DIVIDE ]
expr -> expr . DIVIDE expr [ TIMES PLUS MINUS EOF DIVIDE ]
-- On TIMES shift to state 14
-- On PLUS shift to state 16
-- On MINUS shift to state 20
-- On DIVIDE shift to state 18
-- On EOF reduce production affect -> assignable ASSIGN expr 

State 52:
deb -> affect . [ EOF ]
-- On EOF reduce production deb -> affect 

