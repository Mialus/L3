Pierre	Wargnier

				TP5

1)

arithAST:
  | Stmts of t list

  | Stmts l -> Dot.N("<stmts>",map dot l)

arithlex:
|";"			{ PV }


arithpar:
start2:
|stmts {$1}
|assign {$1}
|expr {$1}
|exprB {$1}

stmts:
| l=stmts_inner {Stmts l}

stmts_inner:{ [] } | s=stmt FINAL ss=stmts_inner { s::ss }
2)

arithlex:
| "++"                  { PP }
| "--"                  { MM }
| "+="                  { PE }
| "-="                  { ME }

arithpar:
exprC:
| id=assignable PP	 		{ Assign (id,Bin (Plus, id,Int 1))}
| id=assignable PE	t=expr 	{ Assign (id,Bin (Plus, id, t))}
| id=assignable ME  t=expr 	{ Assign (id,Bin (Minus, id,  t))}
| id=assignable MM		 	{ Assign (id,Bin (Minus, id, Int 1))}

3)
arithlex:
| "{"                   { ACOPEN }
| "}"                   { ACOCLO }

arithpar:
%token ACOPEN ACOCLO

loop:
| ACOPEN s=stmts ACOCLO     { s }

terminated_stmt: 
| p=loop                                    { p }
| s=stmt PV 								{ s }
| ACOPEN s=stmts ACOCLO							{ s }

4)
arithAST:
  | While of t * t

  | While (l,r) -> Dot.N("While",[dot l; dot r])

arithlex:
| "while"		{ WHILE }

arithpar:
%token WHILE

terminated_stmt: 
| b=loop                                    { b }
| s=exprC PV 								{ s }
| WHILE r=expr t=terminated_stmt { While(r,t) }




















